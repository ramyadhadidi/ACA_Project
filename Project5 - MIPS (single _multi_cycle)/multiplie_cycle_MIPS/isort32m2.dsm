       
        ori $t0, $zero, 0
        addiu $t1, $zero, 0x00

        lui $v0, 0xbaba
        ori $v0, $v0, 0xabba
        lui $v1, 0xdead
        ori $v1, $v1, 0xbeef

        jal wrt
        nop

        addiu $s7, $0, 0x1c0
        jalr $s7, $ra
        nop


stop:   j stop
        nop


        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop



sort:   addiu $t0, $zero, 4    # $t0 = i = 4
        addiu $t1, $zero, 0x60 # $t1 = len = 96
        addu $t1, $t1, $t1
        addu $t1, $t1, $t1

for:    slt $t2, $t0, $t1     # i < len?
        beq $zero, $t2, out   # yes - exit
        addu $t3, $zero, $t0   # $t3=j=i
        lw $t4, 0x30($t0)     # $t4=B=a[i]

loop:   slt $t2, $zero, $t3   # j>0 ?
        beq $zero, $t2, over  # no -exit
		addiu $s1, $zero, 0x4
        subu $t5, $t3, $s1     # $t5=j-1
        lw $t6, 0x30($t5)     # get $t6=a[j-1]
        sltu $t2, $t6, $t4    # >B ?
        beq $zero, $t2, over	 
        sw $t6, 0x30($t3)     # a[j]=a[j-1]
        subu $t3, $zero, $t5   # j--
        beq $zero, $zero, loop

over:   sw $t4, 0x30($t3)     # a[j] = B
        addiu $t0, $t0, 4      # i++
        beq $zero, $zero, for

out:    jr $ra
        nop



wrt:    sw $v1, 0x30($t0)
        addiu $t1, $t1, 1
        addiu $t0, $t0, 4

        multu $v0, $v1
        mfhi $v0
        mflo $v1
        xor $v1, $v1, $v0
        or $v0, $v1, $v0
		
		addiu $s1, $zero, 0x60
        bne $t1, $s1, wrt

        jr $ra

 